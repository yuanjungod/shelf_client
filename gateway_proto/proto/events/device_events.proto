syntax = "proto3";

package device.proto.events;

option go_package = "guoxiaomei.com/device/proto/events";

option java_multiple_files = true;
option java_outer_classname = "DeviceEventsProto";
option java_package = "com.guoxiaomei.device.proto.events";

import "google/protobuf/duration.proto"; 

// 创建设备令牌.
message EventCreateDeviceToken {
  // 令牌所对应的设备.
  string device_id = 1;

  // 设备绑定商城 ID.
  //
  // 对于未绑定商城的设备，此值为空.
  string store_id = 2;

  // 请求获取访问令牌的用户 ID.
  string user_id = 3;

  // 商品数量.
  //
  // key 为商品 ID.
  // value 为对应商品的数量.
  map<string, int32> goods_nums = 4;

  // 创建令牌时的商品价格.
  //
  // 价格单位是: 分.
  //
  // 即: 如果价格是 3.25 元, 返回的是 325.
  map<string, int32> goods_prices = 5;

  // 换取访问令牌的业务名.
  //
  // 业务名不同业务需要严格区分开.
  //
  // 其用途是业务回调时,确认具体的业务接口。
  string biz_name = 6;

  // 业务信息.
  //
  // 用于业务系统换取 code 时, 绑定具体的业务信息.
  string biz_info = 7;

  // 令牌是否有效检查间隔.
  //
  // 设备访问令牌是否有效不是通过时间机制进行的.
  //
  // 设备访问令牌的吊销需要业务方主动进行.
  //
  // 当设备访问令牌上无事件产生超过多长时间时,由相应的服务进行回调确认.
  .google.protobuf.Duration check_interval = 8;
}

// 门被解锁.
message EventDoorUnlocked {
}

// 门被上锁.
message EventDoorLocked {
}

// 门被打开.
message EventDoorOpened {
}

// 门被关闭.
message EventDoorClosed {
}

// 商品检测结果.
message EventObjectDetected {
  // 此值等于 EventDoorLocked 外层 DeviceEvent sequence 时，
  // 代表是关门后的图像识别结果.
  uint32 for_sequence = 1;

  // 商品数量.
  //
  // key 为商品 ID.
  // value 为对应商品的数量.
  map<string, int32> goods_nums = 2;
}
